services:
  api:
    build:
      context: ./api
    restart: always
    env_file:
      - ./api/.env
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
  postgres:
    build:
      context: ./db
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data # this is where the database data will be stored
    ports:
      - "${DB_PORT}:${DB_PORT}"
  db-backups:
    build:
      context: ./db-backups
    volumes:
      - ./db-backups/backups:/backups # this is where the backups will be stored locally
      - ./db-backups/rclone:/root/.config/rclone # rclone config file for Google Drive
    env_file:
      - .env
    depends_on:
      - postgres
    restart: always
    entrypoint: ["sh", "-c", "while true; do /backup.sh; sleep 86400; done"]
  migrations:
    build: ./migrations
    profiles:
      - manual # this service is only run when you need to run migrations
    volumes:
      - ./migrations/migrations:/migrations # this is where the migrations are stored
    environment:
      - DB_HOST=${DB_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:5432/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - postgres
  shitbot:
    build:
      context: ./shitbot
    depends_on:
      - postgres
    restart: always
    env_file:
      - .env
    ports:
      - "8888:8888" # for spotify web login (http://localhost:8888/login)
    volumes:
      - shitbotdata:/data # persist the spotify refresh token file (and nothing else)

volumes:
  shitbotdata:
  pgdata: